<?php
// $Id$

/**
 * Implementation of hook_install().
 */
function apachesolr_attachments_install() {
  drupal_install_schema('apachesolr_attachments');
} 

/**
 * Implementation of hook_uninstall().
 */
function apachesolr_attachments_uninstall() {
  variable_del('apachesolr_attachment_tika_path');
  apachesolr_clear_last_index('apachesolr_attachments');
}

/**
 * hook_requirements().
 */
function apachesolr_attachments_requirements($phase) {

  $requirements = array();
  // Ensure translations don't break at install time
  $t = get_t();
  if ($phase == 'install') {
    $temp = tempnam(file_directory_temp(), 'asa');
    $java = variable_get('apachesolr_attachments_java', 'java');
    exec($java .' -version > '. $temp .' 2>&1');
    $stderror = file_get_contents($temp);
    $found = preg_match('/Java.+Runtime Environment/', $stderror);

    if (!$found) {
      $requirements['apachesolr_attachments_java']  = array(
        'title' => $t('Java executable not found'),
        'description' => $t('Could not execute a java command.  You may need to set the path of the correct java executable as the variable \'apachesolr_attachments_java\' in settings.php.'),
        'severity' => REQUIREMENT_ERROR,
      );
    }
  }

  return $requirements;
}

function apachesolr_attachments_schema() {
  $schema['apachesolr_attachments_files'] = array(
    'description' => 'Stores information for uploaded files.',
    'fields' => array(
      'fid' => array(
        'description' => 'Primary Key: Unique files ID.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE),
      'nid' => array(
        'description' => 'The {node}.nid where the file is attached.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'removed' => array(
        'description' => 'file is no longer attached.',
        'type' => 'int',
        'unsigned' => TRUE,
        'default' => 0),
      ),
    'indexes' => array(
      'nid' => array('nid'),
      'removed' => array('removed'),
      ),
    'primary key' => array('fid'),
    );

  return $schema;
}
